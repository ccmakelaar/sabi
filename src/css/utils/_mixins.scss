@mixin vertical-align {
    position: relative;
    top: 50%;
    -webkit-transform: translateY(-50%);
    -moz-transform: translateY(-50%);
    -o-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
}

@mixin absolute-center {
    position: relative;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -moz-transform: translate(-50%, -50%);
    -o-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
}

@mixin image-replace {
    text-indent: 102%;
    white-space: nowrap;
    overflow: hidden;
}

@mixin hide-visually {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

@mixin link-states {
    &:hover,
    &:focus,
    &:active,
    &:visited {
      @content;
    }
}

@mixin center-block {
  margin-left: auto;
  margin-right: auto;
}

@mixin list-unstyled {
  list-style-type: none;
  padding-left: 0;
}

@mixin scut-list-floated (
  $space: false,
  $dir: left
) {

  @include scut-list-unstyled;
  @include scut-clearfix;

  & > li {
    float: $dir;
  }

  @if $space {
    & > li + li {
      margin-#{$dir}: $space;
    }
  }

}

@function scut-autoOrValue ($val) {
  @if $val == a or $val == auto {
    @return auto;
  }
  @else {
    @return $val;
  }
}

@mixin coords (
  $coordinates: n n n n
) {

  $top: nth($coordinates, 1);
  $right: nth($coordinates, 2);
  $bottom: nth($coordinates, 3);
  $left: nth($coordinates, 4);

  @if $top != n {
    top: scut-autoOrValue($top);
  }
  @if $right != n {
    right: scut-autoOrValue($right);
  }
  @if $bottom != n {
    bottom: scut-autoOrValue($bottom);
  }
  @if $left != n {
    left: scut-autoOrValue($left);
  }

}

@mixin absolute (
  $coordinates: 0 n n 0
) {

  position: absolute;
  @include coords($coordinates);

}

@mixin relative (
  $coordinates: n n n n
) {

  position: relative;
  @include coords($coordinates);

}

@mixin fixed (
  $coordinates: 0 n n 0
) {

  position: fixed;
  @include coords($coordinates);

}

@mixin ratio-box (
  $ratio: 1/1,
  $inner: ".inner"
) {

  overflow: hidden;
  position: relative;

  &:before {
    content: "";
    display: block;
    height: 0;
    padding-top: (1 / $ratio) * 100%;
  }

  & > #{$inner} {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
  }

}